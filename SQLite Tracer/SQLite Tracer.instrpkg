<?xml version="1.0" encoding="UTF-8" ?>
<package>
	<id>io.bartelmess.SQLite-Tracer</id>
	<title>SQLite Tracer</title>
	<owner>
		<name>Thomas Bartelmess</name>
	</owner>

    <import-schema>os-signpost</import-schema>
    <import-schema>time-profile</import-schema>
    <interval-schema>
        <id>sqlite-query-execution</id>
        <title>SQLite Query Execution</title>
        <attribute>
            <name>target-pid</name>
            <required>true</required>
            <note>Single/Multi-process</note>
            <value-pattern>ALL|[0-9]+</value-pattern>
        </attribute>
        <start-column>
            <mnemonic>start</mnemonic>
            <title>Start</title>
            <type>start-time</type>
        </start-column>

        <duration-column>
            <mnemonic>duration</mnemonic>
            <title>Duration</title>
            <type>duration</type>
        </duration-column>

        <primary-column>
            <mnemonic>query</mnemonic>
            <title>SQL Query</title>
            <type>string</type>
        </primary-column>

        <column>
            <mnemonic>fullscan</mnemonic>
            <title>fullscan</title>
            <type>event-count</type>
        </column>

        <column>
            <mnemonic>sort</mnemonic>
            <title>sort</title>
            <type>event-count</type>
        </column>

        <column>
            <mnemonic>autoindex</mnemonic>
            <title>autoindex</title>
            <type>event-count</type>
        </column>

        <column>
            <mnemonic>vm-step</mnemonic>
            <title>Virtual Machine Steps</title>
            <type>event-count</type>
        </column>

        <column>
            <mnemonic>run-count</mnemonic>
            <title>Query Execution Count</title>
            <type>event-count</type>
        </column>

        <!-- Generate an event-concept for long running queries -->
        <column>
            <mnemonic>exec-time-impact</mnemonic>
            <title>Execution Time Impact</title>
            <type>event-concept</type>
        </column>

        <column>
            <mnemonic>backtrace</mnemonic>
            <title>Backtrace</title>
            <type>backtrace</type>
        </column>

        
        
    </interval-schema>
    <point-schema>
        <id>sqlite-narrative</id>
        <title>Narrative</title>

        <timestamp-column>
            <mnemonic>time</mnemonic>
            <title>Timestamp</title>
            <type>event-time</type>
        </timestamp-column>

        <column>
            <mnemonic>issue-type</mnemonic>
            <title>Issue</title>
            <type>string</type>
        </column>

        <column>
            <mnemonic>description</mnemonic>
            <title>description</title>
            <type>narrative</type>
        </column>
    </point-schema>

    <modeler>
        <id>io.bartelmess.sqlite-trace.modeler</id>
        <title>SQLite Tracer</title>
        <purpose>Transforms SQLITE_TRACE events into time intervals</purpose>

        <production-system>
            <rule-path>sql-timing.clp</rule-path>
        </production-system>

        <instance-parameter>?target-pid</instance-parameter>

        <output>
            <schema-ref>sqlite-query-execution</schema-ref>


            <when>
                <attribute>
                    <name>target-pid</name>
                    <binds-parameter>?target-pid</binds-parameter>
                </attribute>
             </when>
            <required-input>
                <schema-ref>os-signpost</schema-ref>
                <attribute>
                    <name>category</name>
                    <string>SQLite Trace</string>
                </attribute>
                <attribute>
                    <name>subsystem</name>
                    <string>io.bartelmess.sqlite-trace</string>
                </attribute>
            </required-input>

            <required-input>
                <schema-ref>time-profile</schema-ref>
                <!-- The ?target-pid instance parameter was bound to the mobile-agent-activity-with-time-samples
                     target-pid attribute. Since it now has a value, it can be used to define the required
                     attribute on time-profile which will determine its sampling behavior.
                 -->
                <attribute> <name>target-pid</name> <expression>?target-pid</expression> </attribute>
                <!-- The following attributes on time-profile are set as:
                       - Enable high-frequency-sampling
                       - Disable kernel callstacks
                       - Enable recording data for waiting/idle threads

                       For more information on which attributes a schema requires, please see
                       the Instruments Inspector and navigate to the "Schemas" tab.
                 -->
                <attribute> <name>high-frequency-sampling</name> <expression>1</expression> </attribute>
                <attribute> <name>needs-kernel-callstack</name> <expression>0</expression> </attribute>
                <attribute> <name>record-waiting-threads</name> <expression>1</expression> </attribute>
            </required-input>
        </output>
    </modeler>

<!--   <modeler>-->
<!--        <id>io.bartelmess.sqlite-trace.anitpatterns</id>-->
<!--        <title>Anti Patterns Modeler</title>-->
<!--        <purpose>Attempts to identify Antipatterns in SQLite usage</purpose>-->
<!---->
<!--        <production-system>-->
<!--            <rule-path>duplicate-query.clp</rule-path>-->
<!--            <rule-path>query-sort.clp</rule-path>-->
<!--        </production-system>-->
<!---->
<!--        <output>-->
<!--            <schema-ref>sqlite-narrative</schema-ref>-->
<!--            <required-input>-->
<!--                <schema-ref>sqlite-query-execution</schema-ref>-->
<!--            </required-input>-->
<!--        </output>-->
<!--    </modeler>-->
    <instrument>
        <id>io.bartelmess.sqlite-tracing</id>
        <title>SQLite Tracer 2</title>
        <category>Behavior</category>
        <purpose>Shows SQLite Trace  Results</purpose>
        <icon>Generic</icon>
        <import-parameter> <from-scope>trace</from-scope> <name>?target-pid</name> </import-parameter>
        <create-table>
            <id>queries</id>
            <schema-ref>sqlite-query-execution</schema-ref>
            <attribute> <name>target-pid</name> <parameter-ref>?target-pid</parameter-ref> </attribute>
        </create-table>

<!--        <create-table>-->
<!--            <id>narrative</id>-->
<!--            <schema-ref>sqlite-narrative</schema-ref>-->
<!--        </create-table>-->

        <graph>
            <title>Queries</title>
            <lane>
                <title>Queries</title>
                <table-ref>queries</table-ref>

                <plot>
                    <value-from>query</value-from>
                    <color-from>exec-time-impact</color-from>
                </plot>
            </lane>
        </graph>

        <list>
            <title>query</title>
            <table-ref>queries</table-ref>
            <column>duration</column>
            <column>query</column>
            <column>start</column>
            <column>exec-time-impact</column>
            <column>backtrace</column>
        </list>
<!--        <narrative>-->
<!--            <title>Narrative</title>-->
<!--            <table-ref>narrative</table-ref>-->
<!--            <narrative-column>description</narrative-column>-->
<!--        </narrative>-->
    </instrument>
</package>
